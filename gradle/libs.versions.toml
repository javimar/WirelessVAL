[versions]
# CORE
sdk = "34"
min-sdk = "26"
agp = "8.2.2"
kotlin = "1.9.22" # da problemas
ksp = "1.9.23-1.0.19"
appId = "eu.javimar.wirelessval"
versionName = "3.0.0"

accompanist = "0.23.1"
androidMapsUtils = "3.5.3"
chucker = "3.5.2"
compose-bom = "2024.02.02"
compose-compiler = "1.5.10"
composeNav = "2.7.7"
core = "1.12.0"
firebase-bom = "32.7.3"
firebaseCrashlyticsGradle = "2.9.9"
googleServices = "4.4.1"
kotlin-serialization-json = "1.6.0"
ktor = "2.3.6"
lifecycle = "2.7.0"
moko = "0.16.1"
preferences = "1.2.1"
mapsCompose = "2.14.1"
playServicesLocation = "21.2.0"
playServicesMaps = "18.2.0"
sqldeligth = "2.0.0"
secrets-plugin = "2.0.1"
compose-plugin = "1.6.0"

[libraries]
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core" }
androidx-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }

# SQLDELIGTH
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldeligth" }

# COMPOSE
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
activity-compose = { module = "androidx.activity:activity-compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
compose-nav = { module = "androidx.navigation:navigation-compose", version.ref = "composeNav"}

# KOTLIN
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json" , version.ref = "kotlin-serialization-json" }

# KTOR
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-android-client = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }

#MOKO
moko-compose = { module = "dev.icerock.moko:mvvm-compose", version.ref = "moko" }
moko-core = { module = "dev.icerock.moko:mvvm-core", version.ref = "moko" }
moko-flow = { module = "dev.icerock.moko:mvvm-flow", version.ref = "moko" }
moko-flow-compose = { module = "dev.icerock.moko:mvvm-flow-compose", version.ref = "moko" }

# CHUCKER
chucker = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }

# GOOGLE
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-crashlytics-gradle = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebaseCrashlyticsGradle" }
google-services = { module = "com.google.gms:google-services", version.ref = "googleServices" }

# MAPS COMPOSE
maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "mapsCompose" }
maps-compose-widgets = { module = "com.google.maps.android:maps-compose-widgets", version.ref = "mapsCompose" }
android-maps-utils = { module = "com.google.maps.android:android-maps-utils", version.ref = "androidMapsUtils" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }

# PREFS
androidx-preference = { module = "androidx.preference:preference-ktx", version.ref = "preferences" }

accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization-plugin = { id= "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight-plugin = { id = "app.cash.sqldelight", version.ref = "sqldeligth" }
secrets-gradle-plugin = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secrets-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }